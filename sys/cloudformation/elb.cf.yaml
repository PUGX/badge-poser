AWSTemplateFormatVersion: 2010-09-09

Resources:

  # ELB
  elbbadgeposer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
        Name: elb-badgeposer
        Subnets: !Ref 'Subnets'
        #SecurityGroups: # TODO
        #- ...

  # ELB LISTENER
  elbstaginglistener80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: "text/plain"
            MessageBody: "aws is a teapot"
            StatusCode: "418"
      LoadBalancerArn: !Ref 'elbbadgeposer'
      Port: 80
      Protocol: HTTP

  elbstaginglistener443:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: "text/plain"
            MessageBody: "https teapot"
            StatusCode: "418"
      LoadBalancerArn: !Ref 'elbbadgeposer'
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2016-08
      Certificates:
        - CertificateArn: !Ref 'ELBAcmCertificateArn'

  # ELB TARGET GROUP
  elbtargetgroupbadgeposer:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: 80
      HealthCheckProtocol: 'HTTP'
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: 200
      Name: badegposer
      Port: 80
      Protocol: 'HTTP'
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId: !Ref "VpcId"

  # ELB LISTENER RULE
  elblistenerrule80badgeposer:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'elbtargetgroupbadgeposer'
      Conditions:
      - Field: path-pattern
        Values: [/*]
      ListenerArn: !Ref 'elbstaginglistener80'
      Priority: 1
  elblistenerrule443badgeposer:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'elbtargetgroupbadgeposer'
      Conditions:
      - Field: path-pattern
        Values: [/*]
      ListenerArn: !Ref 'elbstaginglistener443'
      Priority: 1

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.circle_ci_token: '%env(CIRCLE_CI_TOKEN)%'
    app.gitlab_client: '%env(GITLAB_TOKEN)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Contributors\Service\RepositoryInterface: '@App\Contributors\Service\Repository'

    App\Service\CircleCiClient:
        arguments:
            - '@router'
            - '@Symfony\Contracts\HttpClient\HttpClientInterface'
            - '%app.circle_ci_token%'
    App\Service\CircleCiClientInterface: '@App\Service\CircleCiClient'

    App\Service\SnippetGenerator:
        arguments:
            - '@router'
    App\Service\SnippetGeneratorInterface: '@App\Service\SnippetGenerator'

    App\DateProvider\DateTimeProviderInterface: '@App\DateProvider\CurrentDateTimeProvider'

    App\Stats\Reader\RedisReader:
        arguments:
          - '@Predis\Client'
    App\Stats\Reader\ReaderInterface: '@App\Stats\Reader\RedisReader'


    # Vendor services
    Cache\Adapter\Predis\PredisCachePool:
        arguments:
          - '@Predis\Client'

    GuzzleHttp\Client: ~
    GuzzleHttp\ClientInterface: '@GuzzleHttp\Client'

    Predis\Client: '@snc_redis.default'

    PUGX\Poser\Poser:
        class: ~
        arguments:
            $renders: [ '@PUGX\Poser\SvgPlasticRender', '@PUGX\Poser\SvgFlatRender', '@PUGX\Poser\SvgFlatSquareRender', '@PUGX\Poser\SvgForTheBadgeRender' ]

    PUGX\Poser\SvgPlasticRender:
        class: PUGX\Poser\Render\SvgPlasticRender

    PUGX\Poser\SvgFlatRender:
        class: PUGX\Poser\Render\SvgFlatRender

    PUGX\Poser\SvgFlatSquareRender:
        class: PUGX\Poser\Render\SvgFlatSquareRender

    PUGX\Poser\SvgForTheBadgeRender:
        class: PUGX\Poser\Render\SvgForTheBadgeRenderer

    Gitlab\Client: ~

    App\Service\GitLabClient:
        arguments:
            - '@Gitlab\Client'
            - '%app.gitlab_client%'

    App\Service\GitLabClientInterface: '@App\Service\GitLabClient'



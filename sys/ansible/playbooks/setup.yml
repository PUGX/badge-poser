---
- name: "Provision EC2"
  hosts: "web-1"
  become: true

  # VARS
  # ############################################################################

  vars:
    domain: poser.pugx.org
    email: pugroma@gmail.com
    ntp_timezone: UTC
    firewall_state: started
    firewall_enabled_at_boot: true
    firewall_allowed_tcp_ports: [22, 80, 443]
    os_auth_pw_max_age: 99999
    sysctl_overwrite:
      vm.overcommit_memory: 1
      net.ipv4.ip_forward: 1
      net.core.somaxconn: 65365
      net.ipv4.tcp_tw_reuse: 1
      net.ipv4.tcp_fin_timeout: 30


  # ROLES
  # ############################################################################

  roles:
    - dev-sec.os-hardening
    - geerlingguy.firewall
    - geerlingguy.ntp

  # TASKS
  # ############################################################################

  tasks:
    # DEPENDENCIES
    # #############

    - name: "Set ENV vars"
      copy:
        src: ../../.env.dist
        dest: /etc/environment

    - name: "Enabling dependencies"
      shell: |
        curl -sL https://rpm.nodesource.com/setup_12.x | sudo -E bash -
        amazon-linux-extras enable nginx1 php7.4 redis4.0

    - name: "Let's Encrypt"
      shell: |
        # Ref: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/SSL-on-amazon-linux-2.html#letsencrypt
        wget -r --no-parent -A 'epel-release-*.rpm' http://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/
        rpm -Uvh dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-*.rpm
        yum-config-manager --enable epel*

    - name: "Filebeat"
      shell: |
        # Ref: https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-installation.html
        curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.7.0-x86_64.rpm
        rpm -vi filebeat-7.7.0-x86_64.rpm
      ignore_errors: yes

    - name: Ensure Certbot renew is set in crontab
      lineinfile:
        path: /var/spool/cron/root
        line: "39 1,13 * * * root certbot renew --no-self-upgrade"
      notify:
      - restart cron

    # PACKAGES
    # #############

    - name: "Install packages"
      yum:
        update_cache: yes
        name:
          - certbot
          - curl
          - gcc
          - git
          - htop
          - libyaml-devel
          - nginx
          - nodejs
          - php-bcmath
          - php-devel
          - php-fpm
          - php-gd
          - php-intl
          - php-mbstring
          - php-opcache
          - php-pear
          - python2-certbot-nginx
          - redis
          - supervisor
          - syslog-ng
          - vim
          - wget
        state: present

    - name: "Install additional extension"
      shell: |
        pecl channel-update pecl.php.net
        pecl install msgpack redis yaml

        mkdir /usr/lib/node_modules/node-sass
        npm install -g yarn node-sass || true
        npm rebuild node-sass

    - name: "Install composer"
      shell: |
        wget https://raw.githubusercontent.com/composer/getcomposer.org/76a7060ccb93902cd7576b67264ad91c8a2700e2/web/installer -O - -q | php -- --quiet
        mv composer.phar /usr/local/bin/composer
        chmod +x /usr/local/bin/composer

    - name: "Install syslog-ng"
      shell: |
        chkconfig syslog-ng on
        systemctl start syslog-ng.service

    # TLS CERTIFICATE
    # ################

    - name: "Check if file /etc/nginx/dhparam.pem exists"
      stat:
        path: /etc/nginx/dhparam.pem
      register: dhparam_pem
    - name: "Generage DHParam"
      shell: openssl dhparam -out /etc/nginx/dhparam.pem 2048
      when: not dhparam_pem.stat.exists

    - name: "Check if file TLS cert exists"
      stat:
        path: /etc/letsencrypt/live/poser.pugx.org/fullchain.pem
      register: cert_pem
    - name: "Install TLS cert"
      shell: |
        mkdir -p /etc/letsencrypt/live/poser.pugx.org/
        openssl req -x509 -nodes -newkey rsa:2048 -subj "/C=IT/emailAddress={{ email }}/ST=RM/O=PUGX/CN={{ domain }}/OU=IT/" -keyout /etc/letsencrypt/live/poser.pugx.org/privkey.pem -out /etc/letsencrypt/live/poser.pugx.org/fullchain.pem
        certbot --nginx --agree-tos --redirect --hsts --staple-ocsp --email {{ email }} --domain {{ domain }} --preferred-challenges=http
      ignore_errors: yes
      when: not cert_pem.stat.exists

    # LOGZ.IO
    # ################

    - name: "Download the Logz.io public certificate"
      shell: sudo curl https://raw.githubusercontent.com/logzio/public-certificates/master/TrustExternalCARoot_and_USERTrustRSAAAACA.crt --create-dirs -o /etc/pki/tls/certs/COMODORSADomainValidationSecureServerCA.crt

    - name: Create a directory if it does not exist
      file:
        path: /etc/filebeat
        state: directory
    - name: "Move the configuration file to the Filebeat folder"
      copy:
        src: ../../filebeat/filebeat.yml
        dest: /etc/filebeat/filebeat.yml
    - name: "Apply Env vars"
      shell: cat /etc/filebeat/filebeat.yml | envsubst | tee /etc/filebeat/filebeat.yml
      notify:
      - restart filebeat

    # SERVICES
    # ################

    # TODO: Configure autostart of php, nginx, redis

    - name: Create a directory if it does not exist
      file:
        path: /data/nginx/cache
        state: directory
        recurse: yes
        owner: nginx
        group: nginx
    - name: Ensure nginx purger is set in crontab
      lineinfile:
        path: /var/spool/cron/root
        line: "{{ item.time }} {{ item.command }}"
      with_items:
        - { time: "* * * * *", command: "find /data/nginx/cache/ -type f -newermt '30 seconds ago' | xargs rm" }
        - { time: "* * * * *", command: "( sleep 30 ; find /data/nginx/cache/ -type f -newermt '30 seconds ago' | xargs rm )" }
      notify:
      - restart cron
    - name: "Configure Nginx"
      copy:
        src: ../../nginx/nginx.conf
        dest: /etc/nginx/conf.d/badge-poser.conf
      notify:
      - restart nginx

    - name: "Configure PHP"
      copy:
        src: ../../php/php.ini
        dest: /etc/php.ini
    - name: "Configure PHP-FPM"
      copy:
        src: ../../php/php-fpm.conf
        dest: /etc/php-fpm.conf
    - name: "Configure PHP-FPM"
      copy:
        src: ../../php/www.conf
        dest: /etc/php-fpm.d/www.conf
    - name: "Configure PHP opcache"
      copy:
        src: ../../php/10-opcache.ini
        dest: /etc/php.d/10-opcache.ini
      notify:
      - restart php

    - name: "Configure Supervisor"
      copy:
        src: ../../supervisord/redis.ini
        dest: /etc/supervisord.d/redis.ini
      notify:
      - restart supervisor

    - name: "Configure Redis"
      copy:
        src: ../../redis/redis.conf
        dest: /etc/redis.conf
      notify:
      - restart supervisor

  # HANDLERS
  # ############################################################################

  handlers:
    - name: restart cron
      service:
        name: cron
        state: restarted
    - name: restart filebeat
      service:
        name: filebeat
        state: restarted
    - name: restart nginx
      service:
        name: nginx
        state: restarted
    - name: restart php
      service:
        name: php-fpm
        state: restarted
    - name: restart supervisor
      service:
        name: supervisor
        state: restarted

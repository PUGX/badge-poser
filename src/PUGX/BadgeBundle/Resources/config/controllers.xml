<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="package_repository.class">PUGX\Badge\Infrastructure\Package\PackageRepository</parameter>
        <parameter key="kernel_exceptions_listener.class">PUGX\BadgeBundle\Controller\Badge\KernelExceptionListener</parameter>
    </parameters>

    <services>
        <service id="package_repository" class="%package_repository.class%">
            <argument type="service" id="packagist_client" />
        </service>

        <!-- Dependents -->
        <service id="use_case_badge_dependents" class="PUGX\Badge\Model\UseCase\CreateDependentsBadge">
            <argument type="service" id="package_repository" />
        </service>

        <!-- Download -->
        <service id="use_case_badge_downloads" class="PUGX\Badge\Model\UseCase\CreateDownloadsBadge">
            <argument type="service" id="package_repository" />
        </service>

        <!-- License -->
        <service id="use_case_badge_license" class="PUGX\Badge\Model\UseCase\CreateLicenseBadge">
            <argument type="service" id="package_repository" />
        </service>

        <!-- Version -->
        <service id="use_case_badge_version" class="PUGX\Badge\Model\UseCase\CreateVersionBadge">
            <argument type="service" id="package_repository" />
        </service>

        <!-- composer.lock -->
        <service id="use_case_badge_composerlock" class="PUGX\Badge\Model\UseCase\CreateComposerLockBadge">
            <argument type="service" id="package_repository" />
            <argument type="service" id="http_client" />
        </service>

        <!-- .gitattributes -->
        <service id="use_case_badge_gitattributes" class="PUGX\Badge\Model\UseCase\CreateGitattributesBadge">
            <argument type="service" id="package_repository" />
            <argument type="service" id="http_client" />
        </service>

        <!-- kernel Exception -->
        <service id="use_case_badge_error" class="PUGX\Badge\Model\UseCase\CreateErrorBadge">
        </service>

        <service id="kernel_exceptions_listener" class="%kernel_exceptions_listener.class%">
            <argument type="service" id="use_case_badge_error" />
            <argument type="service" id="image_factory" />
            <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" />
          </service>
      </services>
  </container>
